import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Scanner;




public class Ppal {



   public static void main(String[] args) {
        Connection cn = null;
        Scanner sc = new Scanner(System.in);

        try {
            // Usamos el conector Java para conectarnos a MySQL
            Class.forName("com.mysql.cj.jdbc.Driver");
            String aux = "jdbc:mysql://localhost:3306/Banco";
            
            // Intentamos conectar a la BD
            cn = (Connection) DriverManager .getConnection(aux,"admin","Spm270401");
            if (cn != null) {
                System.out.println("Conexion exitosa");
            }
                    
            // Menú principal
            System.out.println("1. Administrar");
            System.out.println("2. Operar");
            
            int op;
            System.out.print("Seleccione una opcion: ");
            op = sc.nextInt();
            
			switch(op) {
            
            case 1:
            	// Solicitamos la contraseña al administrador. En caso de no ser 1234 volverá a pedir la clave, hasta 3 veces
                int clave;
                int contador = 0;
                
                while(true) {
                	System.out.print("Dime la clave: ");
                	clave = sc.nextInt();
                	
                	if(clave==1234) {
                		Scanner sc2 = new Scanner(System.in);
                        String sql;
                        System.out.print("SQL: ");
                        sql = sc2.nextLine();
                        
                        Statement st = (Statement) cn.createStatement();
                        st.execute(sql);
                        break;
                	} else {
                		System.out.println("Clave incorrecta...");
                		contador++;
                	} if(contador==3) {
                		System.out.println ("Sistema bloqueado...");
                        break;
                	}
                } break;

            case 2:
            	// Solicitamos el PIN al usuario y comprobamos si existe
            	int pin;
                System.out.print("Introduzca su PIN: ");
                pin = sc.nextInt();
                
                Statement st2 = (Statement) cn.createStatement();
                ResultSet rs = (ResultSet) st2.executeQuery("SELECT * FROM Clientes WHERE Pin="+pin+"");
                rs.next();
               
                
                
                if(rs.getInt("Pin")==pin && rs.getInt("Bloqueado")==0) {
                	// Mensaje personalizado para cada usuario
            	   System.out.println("Bienvenido" + " " + rs.getString("Nombre") + " " + rs.getString("Apellido1") + " " + rs.getString("Apellido2"));
            	  
            	   // SUBMENU una vez verificado el PIN
            	   System.out.println("	1. Ingresar");
                   System.out.println("	2. Retirar efectivo");
                   System.out.println("	3. Consulta de saldo");
                   System.out.println("	4. Ultimos movimientos");
            	   
                   int opc;
                   System.out.print("Seleccione una de las siguientes opciones: ");
                   opc = sc.nextInt();
                   
                   switch(opc) {
                   
                   case 1:
                	   int num;
                	   System.out.print("Ingreso: ");
                	   num = sc.nextInt();
                	   
                	   if(num>0) {
                		   Statement st = (Statement) cn.createStatement();
                           st.execute("INSERT INTO Movimientos (Pin,Fecha,Cantidad) VALUES ("+pin+",'2022/08/10',"+num+");");
                           System.out.print("¡Ingreso de " + num + " euros "+ "realizado!");
                	   } else {
                		   System.out.print("El numero debe ser positivo");
                	   }
                	   break;
                  
                   case 2:
                	   System.out.print("Reirada: ");
                	   num = sc.nextInt();                	   
                	   
                	   if(num>0) {
                		   Statement st = (Statement) cn.createStatement();
                           st.execute("INSERT INTO Movimientos (Pin,Fecha,Cantidad) VALUES ("+pin+",'2022/08/10',"+-num+");");
                           System.out.print("¡Transacción aprobada! Ha retirado " + num + " euros");
                	   } else {
                		   System.out.print("El numero debe ser positivo");
                	   }
                	   break;
                  
                   case 3:
                	   Statement st3 = (Statement) cn.createStatement();
                       ResultSet xs = (ResultSet) st3.executeQuery("SELECT Cantidad, SUM(Cantidad) FROM Movimientos WHERE Pin=+"+pin+";");
                	   
                       while(xs.next()) {
                    	   System.out.print("Tu saldo es de: " + xs.getInt("SUM(Cantidad)"));
                       } 
                       break;
                       
                   case 4:
                	   int op3;
                	   System.out.print("Movimientos: ");
                	   op3 = sc.nextInt();
                	   
                	   Statement st4 = (Statement) cn.createStatement();
                       ResultSet xl = (ResultSet) st4.executeQuery("SELECT Id,Pin,Fecha,Cantidad FROM Movimientos WHERE Pin="+pin+" LIMIT "+op3+";");                	 
                       
                       while(xl.next()) {
                    	   System.out.println(xl.getInt("Id") + " " + xl.getInt("Pin") + " " + xl.getDate("Fecha") + " " + xl.getInt("Cantidad"));
                       } 
                       break;    
                  }
                   
               } else {
            	   System.out.print("Bloqueado");
               }
                
            }
                
        }catch (java.sql.SQLIntegrityConstraintViolationException e) {
        	System.out.println("El PIN ya existe");
        }
        
        catch(java.sql.SQLException e) {
            // Controlamos errores
            System.out.println("No existe");

        }
        catch(Exception e) {
            // Controlamos errores
            System.out.println("Problemas de conexion a la BD");
            System.out.print(e.getMessage()); 
            e.printStackTrace();
        }
    }



}